//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace UtmaningenReg
{
    public partial class UtmaningenEntities : ObjectContext
    {
        public const string ConnectionString = "name=UtmaningenEntities";
        public const string ContainerName = "UtmaningenEntities";
    
        #region Constructors
    
        public UtmaningenEntities()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public UtmaningenEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public UtmaningenEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // Creating proxies requires the use of the ProxyDataContractResolver and
            // may allow lazy loading which can expand the loaded graph during serialization.
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public ObjectSet<Banor> Banor
        {
            get { return _banor  ?? (_banor = CreateObjectSet<Banor>("Banor")); }
        }
        private ObjectSet<Banor> _banor;
    
        public ObjectSet<Kanoter> Kanoter
        {
            get { return _kanoter  ?? (_kanoter = CreateObjectSet<Kanoter>("Kanoter")); }
        }
        private ObjectSet<Kanoter> _kanoter;
    
        public ObjectSet<Klasser> Klasser
        {
            get { return _klasser  ?? (_klasser = CreateObjectSet<Klasser>("Klasser")); }
        }
        private ObjectSet<Klasser> _klasser;
    
        public ObjectSet<StartOchSlut> StartOchSlut
        {
            get { return _startOchSlut  ?? (_startOchSlut = CreateObjectSet<StartOchSlut>("StartOchSlut")); }
        }
        private ObjectSet<StartOchSlut> _startOchSlut;
    
        public ObjectSet<Registreringar> Registreringar
        {
            get { return _registreringar  ?? (_registreringar = CreateObjectSet<Registreringar>("Registreringar")); }
        }
        private ObjectSet<Registreringar> _registreringar;
    
        public ObjectSet<Forseningsavgift> Forseningsavgift
        {
            get { return _forseningsavgift  ?? (_forseningsavgift = CreateObjectSet<Forseningsavgift>("Forseningsavgift")); }
        }
        private ObjectSet<Forseningsavgift> _forseningsavgift;
    
        public ObjectSet<Invoice> InvoiceSet
        {
            get { return _invoiceSet  ?? (_invoiceSet = CreateObjectSet<Invoice>("InvoiceSet")); }
        }
        private ObjectSet<Invoice> _invoiceSet;
    
        public ObjectSet<Deltagare> DeltagareSet
        {
            get { return _deltagareSet  ?? (_deltagareSet = CreateObjectSet<Deltagare>("DeltagareSet")); }
        }
        private ObjectSet<Deltagare> _deltagareSet;
    
        public ObjectSet<Rabatt> Rabatter
        {
            get { return _rabatter  ?? (_rabatter = CreateObjectSet<Rabatt>("Rabatter")); }
        }
        private ObjectSet<Rabatt> _rabatter;

        #endregion

    }
}
